{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\test-app\\\\src\\\\views\\\\Maps.js\",\n    _s = $RefreshSig$();\n\n/*!\n\n=========================================================\n* Now UI Dashboard React - v1.5.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/now-ui-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/now-ui-dashboard-react/blob/main/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n// import React from \"react\";\n// // reactstrap components\nimport { Row, Col, Card, CardHeader, CardBody } from \"reactstrap\"; // // core components\n\nimport PanelHeader from \"components/PanelHeader/PanelHeader.js\";\nimport React, { useEffect } from 'react';\nimport ReactDOM from \"react-dom\"; // import 'bootstrap/dist/css/bootstrap.css';\n// import './css/bootstrap.min.css';\n// import './css/style.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MapWrapper = () => {\n  _s();\n\n  const mapRef = React.useRef(null);\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.innerHTML = `         \n        function initTmap() \n        {\n            var map = new Tmapv2.Map(\"TMapApp\", {\n                center: new Tmapv2.LatLng(33.4000,126.51555),\n                width: \"100%\",\n                height: \"100%\",\n                zoom:10\n            });\n            marker.addListener(\"click\", function(evt)\n            {\n              infoWindow = new Tmapv2.InfoWindow({\n                position: new Tmapv2.LatLng(33.4000,126.51555),\n                content: content,\n                border :'0px solid #FF0000',\n                type: 2,\n                map: map\n              });\n            });\n            var content = \"<div style='position: static; top: 320px; left : 320px; display: flex; font-size: 14px; box-shadow: 5px 5px 5px #00000040; border-radius: 10px; width : 400px; height:100px; background-color: rgba(0, 0, 0, 0.6); align-items: center; padding: 5px; color: #fff;'>\"+\n            \"<div class='img-box' style='width: 110px; height: 90px; border-radius: 10px; background: #f5f5f5 url(resources/images/sample/p-sk-logo.png) no-repeat center;'></div>\"+\n            \"<div class='info-box' style='margin-left: 10px;'>\"+\n            \"<p style='margin-bottom: 7px;'>\"+\n            \"<span class='tit' style=' font-size: 16px; font-weight: bold;'>티맵 모빌리티</span>\"+\n            \"<a href='http://tmapapi.sktelecom.com/' target='_blank' class='link' style='color: #41A0FF; font-size: 13px; margin-left: 10px;'>홈페이지</a>\"+\n            \"<p>\"+\n            \"<span class='new-addr'>서울 중구 삼일대로 343 (우)04538</span>\"+\n            \"</p>\"+\n            \"<p>\"+\n            \"<span class='old-addr'>(지번) 저동1가 114</span>\"+\n            \"</p>\"+\n            \"</div>\"+\n            \"<a href='javascript:void(0)' onclick='onClose()' class='btn-close' style='position: absolute; top: 10px; right: 10px; display: block; width: 15px; height: 15px; background-image: url({closebutton}) no-repeat center;'></a>\"+\n            \"</div>\";   \n        }\n        initTmap();\n   `;\n    script.type = \"text/javascript\";\n    script.async = \"async\";\n    document.head.appendChild(script);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"TMapApp\",\n      style: {\n        height: `100%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 8\n    }, this)\n  }, void 0, false);\n};\n\n_s(MapWrapper, \"9mn7MMe4fPaZ50ApsOpRWF2HbFg=\");\n\n_c = MapWrapper;\n\nfunction FullScreenMap() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PanelHeader, {\n      size: \"sm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"map\",\n            className: \"map\",\n            style: {\n              position: \"relative\",\n              overflow: \"hidden\"\n            },\n            children: /*#__PURE__*/_jsxDEV(MapWrapper, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c2 = FullScreenMap;\nexport default FullScreenMap; // const MapWrapper = () => {\n//   const mapRef = React.useRef(null);\n//   React.useEffect(() => {\n//     let google = window.google;\n//     let map = mapRef.current;\n//     let lat = \"40.748817\";\n//     let lng = \"-73.985428\";\n//     const myLatlng = new google.maps.LatLng(lat, lng);\n//     const mapOptions = {\n//       zoom: 13,\n//       center: myLatlng,\n//       scrollwheel: false,\n//       zoomControl: true,\n//       styles: [\n//         {\n//           featureType: \"water\",\n//           elementType: \"geometry\",\n//           stylers: [{ color: \"#e9e9e9\" }, { lightness: 17 }],\n//         },\n//         {\n//           featureType: \"landscape\",\n//           elementType: \"geometry\",\n//           stylers: [{ color: \"#f5f5f5\" }, { lightness: 20 }],\n//         },\n//         {\n//           featureType: \"road.highway\",\n//           elementType: \"geometry.fill\",\n//           stylers: [{ color: \"#ffffff\" }, { lightness: 17 }],\n//         },\n//         {\n//           featureType: \"road.highway\",\n//           elementType: \"geometry.stroke\",\n//           stylers: [{ color: \"#ffffff\" }, { lightness: 29 }, { weight: 0.2 }],\n//         },\n//         {\n//           featureType: \"road.arterial\",\n//           elementType: \"geometry\",\n//           stylers: [{ color: \"#ffffff\" }, { lightness: 18 }],\n//         },\n//         {\n//           featureType: \"road.local\",\n//           elementType: \"geometry\",\n//           stylers: [{ color: \"#ffffff\" }, { lightness: 16 }],\n//         },\n//         {\n//           featureType: \"poi\",\n//           elementType: \"geometry\",\n//           stylers: [{ color: \"#f5f5f5\" }, { lightness: 21 }],\n//         },\n//         {\n//           featureType: \"poi.park\",\n//           elementType: \"geometry\",\n//           stylers: [{ color: \"#dedede\" }, { lightness: 21 }],\n//         },\n//         {\n//           elementType: \"labels.text.stroke\",\n//           stylers: [\n//             { visibility: \"on\" },\n//             { color: \"#ffffff\" },\n//             { lightness: 16 },\n//           ],\n//         },\n//         {\n//           elementType: \"labels.text.fill\",\n//           stylers: [\n//             { saturation: 36 },\n//             { color: \"#333333\" },\n//             { lightness: 40 },\n//           ],\n//         },\n//         { elementType: \"labels.icon\", stylers: [{ visibility: \"off\" }] },\n//         {\n//           featureType: \"transit\",\n//           elementType: \"geometry\",\n//           stylers: [{ color: \"#f2f2f2\" }, { lightness: 19 }],\n//         },\n//         {\n//           featureType: \"administrative\",\n//           elementType: \"geometry.fill\",\n//           stylers: [{ color: \"#fefefe\" }, { lightness: 20 }],\n//         },\n//         {\n//           featureType: \"administrative\",\n//           elementType: \"geometry.stroke\",\n//           stylers: [{ color: \"#fefefe\" }, { lightness: 17 }, { weight: 1.2 }],\n//         },\n//       ],\n//     };\n//     map = new google.maps.Map(map, mapOptions);\n//     const marker = new google.maps.Marker({\n//       position: myLatlng,\n//       map: map,\n//       animation: google.maps.Animation.DROP,\n//       title: \"Now UI Dashboard React!\",\n//     });\n//     const contentString =\n//       '<div class=\"info-window-content\"><h2>Now UI Dashboard React</h2>' +\n//       \"<p>A free Admin for React, Reactstrap, and React Hooks.</p></div>\";\n//     const infowindow = new google.maps.InfoWindow({\n//       content: contentString,\n//     });\n//     google.maps.event.addListener(marker, \"click\", function () {\n//       infowindow.open(map, marker);\n//     });\n//   });\n//   return (\n//     <>\n//       <div style={{ height: `100%` }} ref={mapRef}></div>\n//     </>\n//   );\n// };\n// function FullScreenMap() {\n//   return (\n//     <>\n//       <PanelHeader size=\"sm\" />\n//       <div className=\"content\">\n//         <Row>\n//           <Col xs={12}>\n//             <Card>\n//               <CardHeader>Google Maps</CardHeader>\n//               <CardBody>\n//                 <div\n//                   id=\"map\"\n//                   className=\"map\"\n//                   style={{ position: \"relative\", overflow: \"hidden\" }}\n//                 >\n//                   <MapWrapper />\n//                 </div>\n//               </CardBody>\n//             </Card>\n//           </Col>\n//         </Row>\n//       </div>\n//     </>\n//   );\n// }\n// export default FullScreenMap;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MapWrapper\");\n$RefreshReg$(_c2, \"FullScreenMap\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/test-app/src/views/Maps.js"],"names":["Row","Col","Card","CardHeader","CardBody","PanelHeader","React","useEffect","ReactDOM","MapWrapper","mapRef","useRef","script","document","createElement","innerHTML","type","async","head","appendChild","height","FullScreenMap","position","overflow"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,UAAzB,EAAqCC,QAArC,QAAqD,YAArD,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;AACA;AACA;;;;;AAEA,MAAMC,UAAU,GAAG,MACnB;AAAA;;AACE,QAAMC,MAAM,GAAGJ,KAAK,CAACK,MAAN,CAAa,IAAb,CAAf;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACAF,IAAAA,MAAM,CAACG,SAAP,GAAoB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IApCI;AAqCAH,IAAAA,MAAM,CAACI,IAAP,GAAc,iBAAd;AACAJ,IAAAA,MAAM,CAACK,KAAP,GAAe,OAAf;AACAJ,IAAAA,QAAQ,CAACK,IAAT,CAAcC,WAAd,CAA0BP,MAA1B;AACD,GA1CQ,EA0CN,EA1CM,CAAT;AA2CA,sBACI;AAAA,2BACC;AAAK,MAAA,EAAE,EAAC,SAAR;AAAkB,MAAA,KAAK,EAAE;AAAEQ,QAAAA,MAAM,EAAG;AAAX;AAAzB;AAAA;AAAA;AAAA;AAAA;AADD,mBADJ;AAKD,CAnDD;;GAAMX,U;;KAAAA,U;;AAqDN,SAASY,aAAT,GAAyB;AACvB,sBACE;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,IAAI,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACM,QAAC,IAAD;AAAA,+BACE,QAAC,QAAD;AAAA,iCACE;AACE,YAAA,EAAE,EAAC,KADL;AAEE,YAAA,SAAS,EAAC,KAFZ;AAGE,YAAA,KAAK,EAAE;AAAEC,cAAAA,QAAQ,EAAE,UAAZ;AAAwBC,cAAAA,QAAQ,EAAE;AAAlC,aAHT;AAAA,mCAKA,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAkBD;;MAnBQF,a;AAqBT,eAAeA,aAAfsourcesContent":["/*!\n\n=========================================================\n* Now UI Dashboard React - v1.5.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/now-ui-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/now-ui-dashboard-react/blob/main/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n// import React from \"react\";\n\n// // reactstrap components\nimport { Row, Col, Card, CardHeader, CardBody } from \"reactstrap\";\n\n// // core components\nimport PanelHeader from \"components/PanelHeader/PanelHeader.js\";\n\nimport React, { useEffect } from 'react';\nimport ReactDOM from \"react-dom\";\n// import 'bootstrap/dist/css/bootstrap.css';\n// import './css/bootstrap.min.css';\n// import './css/style.css';\n\nconst MapWrapper = () => \n{\n  const mapRef = React.useRef(null);\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.innerHTML = `         \n        function initTmap() \n        {\n            var map = new Tmapv2.Map(\"TMapApp\", {\n                center: new Tmapv2.LatLng(33.4000,126.51555),\n                width: \"100%\",\n                height: \"100%\",\n                zoom:10\n            });\n            marker.addListener(\"click\", function(evt)\n            {\n              infoWindow = new Tmapv2.InfoWindow({\n                position: new Tmapv2.LatLng(33.4000,126.51555),\n                content: content,\n                border :'0px solid #FF0000',\n                type: 2,\n                map: map\n              });\n            });\n            var content = \"<div style='position: static; top: 320px; left : 320px; display: flex; font-size: 14px; box-shadow: 5px 5px 5px #00000040; border-radius: 10px; width : 400px; height:100px; background-color: rgba(0, 0, 0, 0.6); align-items: center; padding: 5px; color: #fff;'>\"+\n            \"<div class='img-box' style='width: 110px; height: 90px; border-radius: 10px; background: #f5f5f5 url(resources/images/sample/p-sk-logo.png) no-repeat center;'></div>\"+\n            \"<div class='info-box' style='margin-left: 10px;'>\"+\n            \"<p style='margin-bottom: 7px;'>\"+\n            \"<span class='tit' style=' font-size: 16px; font-weight: bold;'>티맵 모빌리티</span>\"+\n            \"<a href='http://tmapapi.sktelecom.com/' target='_blank' class='link' style='color: #41A0FF; font-size: 13px; margin-left: 10px;'>홈페이지</a>\"+\n            \"<p>\"+\n            \"<span class='new-addr'>서울 중구 삼일대로 343 (우)04538</span>\"+\n            \"</p>\"+\n            \"<p>\"+\n            \"<span class='old-addr'>(지번) 저동1가 114</span>\"+\n            \"</p>\"+\n            \"</div>\"+\n            \"<a href='javascript:void(0)' onclick='onClose()' class='btn-close' style='position: absolute; top: 10px; right: 10px; display: block; width: 15px; height: 15px; background-image: url({closebutton}) no-repeat center;'></a>\"+\n            \"</div>\";   \n        }\n        initTmap();\n   `;\n    script.type = \"text/javascript\";\n    script.async = \"async\";\n    document.head.appendChild(script);\n  }, []);\n  return (\n      <>\n       <div id=\"TMapApp\" style={{ height: `100%` }}></div>\n     </>\n  );\n}\n\nfunction FullScreenMap() {\n  return (\n    <>\n      <PanelHeader size=\"sm\" />\n      <div className=\"content\">\n            <Card>\n              <CardBody>\n                <div\n                  id=\"map\"\n                  className=\"map\"\n                  style={{ position: \"relative\", overflow: \"hidden\" }}\n                >\n                <MapWrapper />  \n                </div>\n              </CardBody>\n            </Card>\n      </div>\n    </>\n  );\n}\n\nexport default FullScreenMap;\n\n// const MapWrapper = () => {\n//   const mapRef = React.useRef(null);\n//   React.useEffect(() => {\n//     let google = window.google;\n//     let map = mapRef.current;\n//     let lat = \"40.748817\";\n//     let lng = \"-73.985428\";\n//     const myLatlng = new google.maps.LatLng(lat, lng);\n//     const mapOptions = {\n//       zoom: 13,\n//       center: myLatlng,\n//       scrollwheel: false,\n//       zoomControl: true,\n//       styles: [\n//         {\n//           featureType: \"water\",\n//           elementType: \"geometry\",\n//           stylers: [{ color: \"#e9e9e9\" }, { lightness: 17 }],\n//         },\n//         {\n//           featureType: \"landscape\",\n//           elementType: \"geometry\",\n//           stylers: [{ color: \"#f5f5f5\" }, { lightness: 20 }],\n//         },\n//         {\n//           featureType: \"road.highway\",\n//           elementType: \"geometry.fill\",\n//           stylers: [{ color: \"#ffffff\" }, { lightness: 17 }],\n//         },\n//         {\n//           featureType: \"road.highway\",\n//           elementType: \"geometry.stroke\",\n//           stylers: [{ color: \"#ffffff\" }, { lightness: 29 }, { weight: 0.2 }],\n//         },\n//         {\n//           featureType: \"road.arterial\",\n//           elementType: \"geometry\",\n//           stylers: [{ color: \"#ffffff\" }, { lightness: 18 }],\n//         },\n//         {\n//           featureType: \"road.local\",\n//           elementType: \"geometry\",\n//           stylers: [{ color: \"#ffffff\" }, { lightness: 16 }],\n//         },\n//         {\n//           featureType: \"poi\",\n//           elementType: \"geometry\",\n//           stylers: [{ color: \"#f5f5f5\" }, { lightness: 21 }],\n//         },\n//         {\n//           featureType: \"poi.park\",\n//           elementType: \"geometry\",\n//           stylers: [{ color: \"#dedede\" }, { lightness: 21 }],\n//         },\n//         {\n//           elementType: \"labels.text.stroke\",\n//           stylers: [\n//             { visibility: \"on\" },\n//             { color: \"#ffffff\" },\n//             { lightness: 16 },\n//           ],\n//         },\n//         {\n//           elementType: \"labels.text.fill\",\n//           stylers: [\n//             { saturation: 36 },\n//             { color: \"#333333\" },\n//             { lightness: 40 },\n//           ],\n//         },\n//         { elementType: \"labels.icon\", stylers: [{ visibility: \"off\" }] },\n//         {\n//           featureType: \"transit\",\n//           elementType: \"geometry\",\n//           stylers: [{ color: \"#f2f2f2\" }, { lightness: 19 }],\n//         },\n//         {\n//           featureType: \"administrative\",\n//           elementType: \"geometry.fill\",\n//           stylers: [{ color: \"#fefefe\" }, { lightness: 20 }],\n//         },\n//         {\n//           featureType: \"administrative\",\n//           elementType: \"geometry.stroke\",\n//           stylers: [{ color: \"#fefefe\" }, { lightness: 17 }, { weight: 1.2 }],\n//         },\n//       ],\n//     };\n\n//     map = new google.maps.Map(map, mapOptions);\n\n//     const marker = new google.maps.Marker({\n//       position: myLatlng,\n//       map: map,\n//       animation: google.maps.Animation.DROP,\n//       title: \"Now UI Dashboard React!\",\n//     });\n\n//     const contentString =\n//       '<div class=\"info-window-content\"><h2>Now UI Dashboard React</h2>' +\n//       \"<p>A free Admin for React, Reactstrap, and React Hooks.</p></div>\";\n\n//     const infowindow = new google.maps.InfoWindow({\n//       content: contentString,\n//     });\n\n//     google.maps.event.addListener(marker, \"click\", function () {\n//       infowindow.open(map, marker);\n//     });\n//   });\n//   return (\n//     <>\n//       <div style={{ height: `100%` }} ref={mapRef}></div>\n//     </>\n//   );\n// };\n\n// function FullScreenMap() {\n//   return (\n//     <>\n//       <PanelHeader size=\"sm\" />\n//       <div className=\"content\">\n//         <Row>\n//           <Col xs={12}>\n//             <Card>\n//               <CardHeader>Google Maps</CardHeader>\n//               <CardBody>\n//                 <div\n//                   id=\"map\"\n//                   className=\"map\"\n//                   style={{ position: \"relative\", overflow: \"hidden\" }}\n//                 >\n//                   <MapWrapper />\n//                 </div>\n//               </CardBody>\n//             </Card>\n//           </Col>\n//         </Row>\n//       </div>\n//     </>\n//   );\n// }\n\n// export default FullScreenMap;\n"]},"metadata":{},"sourceType":"module"}