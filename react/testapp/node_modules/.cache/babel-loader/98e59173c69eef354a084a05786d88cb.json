{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\test-app\\\\src\\\\views\\\\Maps.js\",\n    _s = $RefreshSig$();\n\n/*!\n\n=========================================================\n* Now UI Dashboard React - v1.5.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/now-ui-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/now-ui-dashboard-react/blob/main/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n// import React from \"react\";\n// // reactstrap components\nimport { Row, Col, Card, CardHeader, CardBody } from \"reactstrap\"; // // core components\n\nimport PanelHeader from \"components/PanelHeader/PanelHeader.js\";\nimport React, { useEffect } from 'react';\nimport ReactDOM from \"react-dom\"; // import 'bootstrap/dist/css/bootstrap.css';\n// import './css/bootstrap.min.css';\n// import './css/style.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MapWrapper() {\n  _s();\n\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.innerHTML = `         \n        function initTmap() {\n            var map = new Tmapv2.Map(\"TMapApp\", {\n                center: new Tmapv2.LatLng(37.566481622437934,126.98502302169841),\n                width: \"100%\",\n                height: \"100%\",\n                zoom:15\n            });\n        }\n        \n        initTmap();\n   `;\n    script.type = \"text/javascript\";\n    script.async = \"async\";\n    document.head.appendChild(script);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"TMapApp\",\n      style: {\n        height: `100%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 8\n    }, this)\n  }, void 0, false);\n} // const MapWrapper = () => {\n//   const mapRef = React.useRef(null);\n//   React.useEffect(() => {\n//     let google = window.google;\n//     let map = mapRef.current;\n//     let lat = \"40.748817\";\n//     let lng = \"-73.985428\";\n//     const myLatlng = new google.maps.LatLng(lat, lng);\n//     const mapOptions = {\n//       zoom: 13,\n//       center: myLatlng,\n//       scrollwheel: false,\n//       zoomControl: true,\n//       styles: [\n//         {\n//           featureType: \"water\",\n//           elementType: \"geometry\",\n//           stylers: [{ color: \"#e9e9e9\" }, { lightness: 17 }],\n//         },\n//         {\n//           featureType: \"landscape\",\n//           elementType: \"geometry\",\n//           stylers: [{ color: \"#f5f5f5\" }, { lightness: 20 }],\n//         },\n//         {\n//           featureType: \"road.highway\",\n//           elementType: \"geometry.fill\",\n//           stylers: [{ color: \"#ffffff\" }, { lightness: 17 }],\n//         },\n//         {\n//           featureType: \"road.highway\",\n//           elementType: \"geometry.stroke\",\n//           stylers: [{ color: \"#ffffff\" }, { lightness: 29 }, { weight: 0.2 }],\n//         },\n//         {\n//           featureType: \"road.arterial\",\n//           elementType: \"geometry\",\n//           stylers: [{ color: \"#ffffff\" }, { lightness: 18 }],\n//         },\n//         {\n//           featureType: \"road.local\",\n//           elementType: \"geometry\",\n//           stylers: [{ color: \"#ffffff\" }, { lightness: 16 }],\n//         },\n//         {\n//           featureType: \"poi\",\n//           elementType: \"geometry\",\n//           stylers: [{ color: \"#f5f5f5\" }, { lightness: 21 }],\n//         },\n//         {\n//           featureType: \"poi.park\",\n//           elementType: \"geometry\",\n//           stylers: [{ color: \"#dedede\" }, { lightness: 21 }],\n//         },\n//         {\n//           elementType: \"labels.text.stroke\",\n//           stylers: [\n//             { visibility: \"on\" },\n//             { color: \"#ffffff\" },\n//             { lightness: 16 },\n//           ],\n//         },\n//         {\n//           elementType: \"labels.text.fill\",\n//           stylers: [\n//             { saturation: 36 },\n//             { color: \"#333333\" },\n//             { lightness: 40 },\n//           ],\n//         },\n//         { elementType: \"labels.icon\", stylers: [{ visibility: \"off\" }] },\n//         {\n//           featureType: \"transit\",\n//           elementType: \"geometry\",\n//           stylers: [{ color: \"#f2f2f2\" }, { lightness: 19 }],\n//         },\n//         {\n//           featureType: \"administrative\",\n//           elementType: \"geometry.fill\",\n//           stylers: [{ color: \"#fefefe\" }, { lightness: 20 }],\n//         },\n//         {\n//           featureType: \"administrative\",\n//           elementType: \"geometry.stroke\",\n//           stylers: [{ color: \"#fefefe\" }, { lightness: 17 }, { weight: 1.2 }],\n//         },\n//       ],\n//     };\n//     map = new google.maps.Map(map, mapOptions);\n//     const marker = new google.maps.Marker({\n//       position: myLatlng,\n//       map: map,\n//       animation: google.maps.Animation.DROP,\n//       title: \"Now UI Dashboard React!\",\n//     });\n//     const contentString =\n//       '<div class=\"info-window-content\"><h2>Now UI Dashboard React</h2>' +\n//       \"<p>A free Admin for React, Reactstrap, and React Hooks.</p></div>\";\n//     const infowindow = new google.maps.InfoWindow({\n//       content: contentString,\n//     });\n//     google.maps.event.addListener(marker, \"click\", function () {\n//       infowindow.open(map, marker);\n//     });\n//   });\n//   return (\n//     <>\n//       <div style={{ height: `100%` }} ref={mapRef}></div>\n//     </>\n//   );\n// };\n// function FullScreenMap() {\n// return (\n//   <>\n//     <PanelHeader size=\"sm\" />\n//     <div className=\"content\">\n//       <Row>\n//         <Col xs={12}>\n//           <Card>\n//             <CardHeader>Google Maps</CardHeader>\n//             <CardBody>\n//               <div\n//                 id=\"map\"\n//                 className=\"map\"\n//                 style={{ position: \"relative\", overflow: \"hidden\" }}\n//               >\n//                 <MapWrapper />\n//               </div>\n//             </CardBody>\n//           </Card>\n//         </Col>\n//       </Row>\n//     </div>\n//   </>\n// );\n// }\n// export default FullScreenMap;\n\n_s(MapWrapper, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = MapWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapWrapper\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/test-app/src/views/Maps.js"],"names":["Row","Col","Card","CardHeader","CardBody","PanelHeader","React","useEffect","ReactDOM","MapWrapper","script","document","createElement","innerHTML","type","async","head","appendChild","height"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,UAAzB,EAAqCC,QAArC,QAAqD,YAArD,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;AACA;AACA;;;;AAEA,eAAe,SAASC,UAAT,GACf;AAAA;;AACEF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMG,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACAF,IAAAA,MAAM,CAACG,SAAP,GAAoB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAXI;AAYAH,IAAAA,MAAM,CAACI,IAAP,GAAc,iBAAd;AACAJ,IAAAA,MAAM,CAACK,KAAP,GAAe,OAAf;AACAJ,IAAAA,QAAQ,CAACK,IAAT,CAAcC,WAAd,CAA0BP,MAA1B;AACD,GAjBQ,EAiBN,EAjBM,CAAT;AAkBA,sBACI;AAAA,2BACC;AAAK,MAAA,EAAE,EAAC,SAAR;AAAkB,MAAA,KAAK,EAAE;AAAEQ,QAAAA,MAAM,EAAG;AAAX;AAAzB;AAAA;AAAA;AAAA;AAAA;AADD,mwBT,U;;KAAAA,U","sourcesContent":["/*!\n\n=========================================================\n* Now UI Dashboard React - v1.5.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/now-ui-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/now-ui-dashboard-react/blob/main/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n// import React from \"react\";\n\n// // reactstrap components\nimport { Row, Col, Card, CardHeader, CardBody } from \"reactstrap\";\n\n// // core components\nimport PanelHeader from \"components/PanelHeader/PanelHeader.js\";\n\nimport React, { useEffect } from 'react';\nimport ReactDOM from \"react-dom\";\n// import 'bootstrap/dist/css/bootstrap.css';\n// import './css/bootstrap.min.css';\n// import './css/style.css';\n\nexport default function MapWrapper() \n{\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.innerHTML = `         \n        function initTmap() {\n            var map = new Tmapv2.Map(\"TMapApp\", {\n                center: new Tmapv2.LatLng(37.566481622437934,126.98502302169841),\n                width: \"100%\",\n                height: \"100%\",\n                zoom:15\n            });\n        }\n        \n        initTmap();\n   `;\n    script.type = \"text/javascript\";\n    script.async = \"async\";\n    document.head.appendChild(script);\n  }, []);\n  return (\n      <>\n       <div id=\"TMapApp\" style={{ height: `100%` }}></div>\n     </>\n  );\n}\n\n// const MapWrapper = () => {\n//   const mapRef = React.useRef(null);\n//   React.useEffect(() => {\n//     let google = window.google;\n//     let map = mapRef.current;\n//     let lat = \"40.748817\";\n//     let lng = \"-73.985428\";\n//     const myLatlng = new google.maps.LatLng(lat, lng);\n//     const mapOptions = {\n//       zoom: 13,\n//       center: myLatlng,\n//       scrollwheel: false,\n//       zoomControl: true,\n//       styles: [\n//         {\n//           featureType: \"water\",\n//           elementType: \"geometry\",\n//           stylers: [{ color: \"#e9e9e9\" }, { lightness: 17 }],\n//         },\n//         {\n//           featureType: \"landscape\",\n//           elementType: \"geometry\",\n//           stylers: [{ color: \"#f5f5f5\" }, { lightness: 20 }],\n//         },\n//         {\n//           featureType: \"road.highway\",\n//           elementType: \"geometry.fill\",\n//           stylers: [{ color: \"#ffffff\" }, { lightness: 17 }],\n//         },\n//         {\n//           featureType: \"road.highway\",\n//           elementType: \"geometry.stroke\",\n//           stylers: [{ color: \"#ffffff\" }, { lightness: 29 }, { weight: 0.2 }],\n//         },\n//         {\n//           featureType: \"road.arterial\",\n//           elementType: \"geometry\",\n//           stylers: [{ color: \"#ffffff\" }, { lightness: 18 }],\n//         },\n//         {\n//           featureType: \"road.local\",\n//           elementType: \"geometry\",\n//           stylers: [{ color: \"#ffffff\" }, { lightness: 16 }],\n//         },\n//         {\n//           featureType: \"poi\",\n//           elementType: \"geometry\",\n//           stylers: [{ color: \"#f5f5f5\" }, { lightness: 21 }],\n//         },\n//         {\n//           featureType: \"poi.park\",\n//           elementType: \"geometry\",\n//           stylers: [{ color: \"#dedede\" }, { lightness: 21 }],\n//         },\n//         {\n//           elementType: \"labels.text.stroke\",\n//           stylers: [\n//             { visibility: \"on\" },\n//             { color: \"#ffffff\" },\n//             { lightness: 16 },\n//           ],\n//         },\n//         {\n//           elementType: \"labels.text.fill\",\n//           stylers: [\n//             { saturation: 36 },\n//             { color: \"#333333\" },\n//             { lightness: 40 },\n//           ],\n//         },\n//         { elementType: \"labels.icon\", stylers: [{ visibility: \"off\" }] },\n//         {\n//           featureType: \"transit\",\n//           elementType: \"geometry\",\n//           stylers: [{ color: \"#f2f2f2\" }, { lightness: 19 }],\n//         },\n//         {\n//           featureType: \"administrative\",\n//           elementType: \"geometry.fill\",\n//           stylers: [{ color: \"#fefefe\" }, { lightness: 20 }],\n//         },\n//         {\n//           featureType: \"administrative\",\n//           elementType: \"geometry.stroke\",\n//           stylers: [{ color: \"#fefefe\" }, { lightness: 17 }, { weight: 1.2 }],\n//         },\n//       ],\n//     };\n\n//     map = new google.maps.Map(map, mapOptions);\n\n//     const marker = new google.maps.Marker({\n//       position: myLatlng,\n//       map: map,\n//       animation: google.maps.Animation.DROP,\n//       title: \"Now UI Dashboard React!\",\n//     });\n\n//     const contentString =\n//       '<div class=\"info-window-content\"><h2>Now UI Dashboard React</h2>' +\n//       \"<p>A free Admin for React, Reactstrap, and React Hooks.</p></div>\";\n\n//     const infowindow = new google.maps.InfoWindow({\n//       content: contentString,\n//     });\n\n//     google.maps.event.addListener(marker, \"click\", function () {\n//       infowindow.open(map, marker);\n//     });\n//   });\n//   return (\n//     <>\n//       <div style={{ height: `100%` }} ref={mapRef}></div>\n//     </>\n//   );\n// };\n\n// function FullScreenMap() {\n  // return (\n  //   <>\n  //     <PanelHeader size=\"sm\" />\n  //     <div className=\"content\">\n  //       <Row>\n  //         <Col xs={12}>\n  //           <Card>\n  //             <CardHeader>Google Maps</CardHeader>\n  //             <CardBody>\n  //               <div\n  //                 id=\"map\"\n  //                 className=\"map\"\n  //                 style={{ position: \"relative\", overflow: \"hidden\" }}\n  //               >\n  //                 <MapWrapper />\n  //               </div>\n  //             </CardBody>\n  //           </Card>\n  //         </Col>\n  //       </Row>\n  //     </div>\n  //   </>\n  // );\n// }\n\n// export default FullScreenMap;\n"]},"metadata":{},"sourceType":"module"}