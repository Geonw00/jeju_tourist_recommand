{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\test-app\\\\src\\\\components\\\\Navbars\\\\DemoNavbar.js\",\n    _s = $RefreshSig$();\n\n/*!\n\n=========================================================\n* Now UI Dashboard React - v1.5.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/now-ui-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/now-ui-dashboard-react/blob/main/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Container, InputGroup, InputGroupText, InputGroupAddon, Input } from \"reactstrap\";\nimport routes from \"routes.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DemoNavbar(props) {\n  _s();\n\n  const location = useLocation();\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [dropdownOpen, setDropdownOpen] = React.useState(false);\n  const [color, setColor] = React.useState(\"transparent\");\n  const sidebarToggle = React.useRef();\n\n  const toggle = () => {\n    if (isOpen) {\n      setColor(\"transparent\");\n    } else {\n      setColor(\"white\");\n    }\n\n    setIsOpen(!isOpen);\n  };\n\n  const dropdownToggle = e => {\n    setDropdownOpen(!dropdownOpen);\n  };\n\n  const getBrand = () => {\n    var name;\n    routes.map((prop, key) => {\n      if (prop.collapse) {\n        prop.views.map((prop, key) => {\n          if (prop.path === props.location.pathname) {\n            name = prop.name;\n          }\n\n          return null;\n        });\n      } else {\n        if (prop.redirect) {\n          if (prop.path === props.location.pathname) {\n            name = prop.name;\n          }\n        } else {\n          if (prop.path === props.location.pathname) {\n            name = prop.name;\n          }\n        }\n      }\n\n      return null;\n    });\n    return name;\n  };\n\n  const openSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    sidebarToggle.current.classList.toggle(\"toggled\");\n  }; // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n\n\n  const updateColor = () => {\n    if (window.innerWidth < 993 && isOpen) {\n      setColor(\"white\");\n    } else {\n      setColor(\"transparent\");\n    }\n  };\n\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateColor);\n  }, []);\n  React.useEffect(() => {\n    if (window.innerWidth < 993 && document.documentElement.className.indexOf(\"nav-open\") !== -1) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      sidebarToggle.current.classList.toggle(\"toggled\");\n    }\n  }, [location]);\n  return (\n    /*#__PURE__*/\n    // add or remove classes depending if we are on full-screen-maps page or not\n    _jsxDEV(Navbar, {\n      color: props.location.pathname.indexOf(\"full-screen-maps\") !== -1 ? \"white\" : color,\n      expand: \"lg\",\n      className: props.location.pathname.indexOf(\"full-screen-maps\") !== -1 ? \"navbar-absolute fixed-top\" : \"navbar-absolute fixed-top \" + (color === \"transparent\" ? \"navbar-transparent \" : \"\"),\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navbar-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"navbar-toggle\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              ref: sidebarToggle,\n              className: \"navbar-toggler\",\n              onClick: () => openSidebar(),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"navbar-toggler-bar bar1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"navbar-toggler-bar bar2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"navbar-toggler-bar bar3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(NavbarBrand, {\n            href: \"/\",\n            children: getBrand()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(NavbarToggler, {\n          onClick: toggle,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"navbar-toggler-bar navbar-kebab\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"navbar-toggler-bar navbar-kebab\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"navbar-toggler-bar navbar-kebab\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          isOpen: isOpen,\n          navbar: true,\n          className: \"justify-content-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            children: /*#__PURE__*/_jsxDEV(InputGroup, {\n              className: \"no-border\",\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                placeholder: \"Search...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(InputGroupAddon, {\n                addonType: \"append\",\n                children: /*#__PURE__*/_jsxDEV(InputGroupText, {\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"now-ui-icons ui-1_zoom-bold\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Nav, {\n            navbar: true,\n            children: /*#__PURE__*/_jsxDEV(NavItem, {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"#pablo\",\n                className: \"nav-link\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"now-ui-icons media-2_sound-wave\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"d-lg-none d-md-block\",\n                    children: \"Stats\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(DemoNavbar, \"bW78OSO/vTJ9PTt7humJCvZTBDs=\", false, function () {\n  return [useLocation];\n});\n\n_c = DemoNavbar;\nexport default DemoNavbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"DemoNavbar\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/test-app/src/components/Navbars/DemoNavbar.js"],"names":["React","Link","useLocation","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","Container","InputGroup","InputGroupText","InputGroupAddon","Input","routes","DemoNavbar","props","location","isOpen","setIsOpen","useState","dropdownOpen","setDropdownOpen","color","setColor","sidebarToggle","useRef","toggle","dropdownToggle","e","getBrand","name","map","prop","key","collapse","views","path","pathname","redirect","openSidebar","document","documentElement","classList","current","updateColor","window","innerWidth","useEffect","addEventListener","className","indexOf"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Now UI Dashboard React - v1.5.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/now-ui-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/now-ui-dashboard-react/blob/main/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Container,\n  InputGroup,\n  InputGroupText,\n  InputGroupAddon,\n  Input,\n} from \"reactstrap\";\n\nimport routes from \"routes.js\";\n\nfunction DemoNavbar(props) {\n  const location = useLocation();\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [dropdownOpen, setDropdownOpen] = React.useState(false);\n  const [color, setColor] = React.useState(\"transparent\");\n  const sidebarToggle = React.useRef();\n  const toggle = () => {\n    if (isOpen) {\n      setColor(\"transparent\");\n    } else {\n      setColor(\"white\");\n    }\n    setIsOpen(!isOpen);\n  };\n  const dropdownToggle = (e) => {\n    setDropdownOpen(!dropdownOpen);\n  };\n  const getBrand = () => {\n    var name;\n    routes.map((prop, key) => {\n      if (prop.collapse) {\n        prop.views.map((prop, key) => {\n          if (prop.path === props.location.pathname) {\n            name = prop.name;\n          }\n          return null;\n        });\n      } else {\n        if (prop.redirect) {\n          if (prop.path === props.location.pathname) {\n            name = prop.name;\n          }\n        } else {\n          if (prop.path === props.location.pathname) {\n            name = prop.name;\n          }\n        }\n      }\n      return null;\n    });\n    return name;\n  };\n  const openSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    sidebarToggle.current.classList.toggle(\"toggled\");\n  };\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n  const updateColor = () => {\n    if (window.innerWidth < 993 && isOpen) {\n      setColor(\"white\");\n    } else {\n      setColor(\"transparent\");\n    }\n  };\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateColor);\n  }, []);\n  React.useEffect(() => {\n    if (\n      window.innerWidth < 993 &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      sidebarToggle.current.classList.toggle(\"toggled\");\n    }\n  }, [location]);\n  return (\n    // add or remove classes depending if we are on full-screen-maps page or not\n    <Navbar\n      color={\n        props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n          ? \"white\"\n          : color\n      }\n      expand=\"lg\"\n      className={\n        props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n          ? \"navbar-absolute fixed-top\"\n          : \"navbar-absolute fixed-top \" +\n            (color === \"transparent\" ? \"navbar-transparent \" : \"\")\n      }\n    >\n      <Container fluid>\n        <div className=\"navbar-wrapper\">\n          <div className=\"navbar-toggle\">\n            <button\n              type=\"button\"\n              ref={sidebarToggle}\n              className=\"navbar-toggler\"\n              onClick={() => openSidebar()}\n            >\n              <span className=\"navbar-toggler-bar bar1\" />\n              <span className=\"navbar-toggler-bar bar2\" />\n              <span className=\"navbar-toggler-bar bar3\" />\n            </button>\n          </div>\n          <NavbarBrand href=\"/\">{getBrand()}</NavbarBrand>\n        </div>\n        <NavbarToggler onClick={toggle}>\n          <span className=\"navbar-toggler-bar navbar-kebab\" />\n          <span className=\"navbar-toggler-bar navbar-kebab\" />\n          <span className=\"navbar-toggler-bar navbar-kebab\" />\n        </NavbarToggler>\n        <Collapse isOpen={isOpen} navbar className=\"justify-content-end\">\n          <form>\n            <InputGroup className=\"no-border\">\n              <Input placeholder=\"Search...\" />\n              <InputGroupAddon addonType=\"append\">\n                <InputGroupText>\n                  <i className=\"now-ui-icons ui-1_zoom-bold\" />\n                </InputGroupText>\n              </InputGroupAddon>\n            </InputGroup>\n          </form>\n          <Nav navbar>\n            <NavItem>\n              <Link to=\"#pablo\" className=\"nav-link\">\n                <i className=\"now-ui-icons media-2_sound-wave\" />\n                <p>\n                  <span className=\"d-lg-none d-md-block\">Stats</span>\n                </p>\n              </Link>\n            </NavItem>\n            {/* <Dropdown\n              nav\n              isOpen={dropdownOpen}\n              toggle={(e) => dropdownToggle(e)}\n            >\n              <DropdownToggle caret nav>\n                <i className=\"now-ui-icons location_world\" />\n                <p>\n                  <span className=\"d-lg-none d-md-block\">Some Actions</span>\n                </p>\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem tag=\"a\">Action</DropdownItem>\n                <DropdownItem tag=\"a\">Another Action</DropdownItem>\n                <DropdownItem tag=\"a\">Something else here</DropdownItem>\n              </DropdownMenu>\n            </Dropdown> */}\n            {/* <NavItem>\n              <Link to=\"#pablo\" className=\"nav-link\">\n                <i className=\"now-ui-icons users_single-02\" />\n                <p>\n                  <span className=\"d-lg-none d-md-block\">Account</span>\n                </p>\n              </Link>\n            </NavItem> */}\n          </Nav>\n        </Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default DemoNavbar;\n"]},"metadata":{},"sourceType":"module"}