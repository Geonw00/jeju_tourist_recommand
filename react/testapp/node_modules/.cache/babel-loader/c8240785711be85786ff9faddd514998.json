{"ast":null,"code":"var _jsxFileName = \"/Users/youlee/Desktop/test222/react/testapp/src/views/Maps.js\",\n    _s = $RefreshSig$();\n\n/*!\n\n=========================================================\n* Now UI Dashboard React - v1.5.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/now-ui-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/now-ui-dashboard-react/blob/main/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n// import React from \"react\";\n// // reactstrap components\nimport { Row, Col, Card, CardHeader, CardBody } from \"reactstrap\"; // // core components\n\nimport PanelHeader from \"components/PanelHeader/PanelHeader.js\";\nimport React, { useEffect, useState } from 'react';\nimport ReactDOM from \"react-dom\"; // import 'bootstrap/dist/css/bootstrap.css';\n// import './css/bootstrap.min.css';\n// import './css/style.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MapWrapper = () => {\n  _s();\n\n  const [aaa, setAaa] = useState();\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.innerHTML = `\n\t  var map;\n\t  var str=\"\";\n\t\t\tvar markerInfo;\n\t\t\t//출발지,도착지 마커\n\t\t\tvar marker_s, marker_e, marker_p, new_marker_p2;\n\t\t\t//경로그림정보\n\t\t\tvar drawInfoArr = [];\n\t\t\tvar drawInfoArr2 = [];\n\t\t\n\t\t\tvar chktraffic = [];\n\t\t\tvar resultdrawArr = [];\n\t\t\tvar resultMarkerArr = [];\n\t\t\t//관광지는 n x [2] 열은 위도,경도\n\t\t\tvar attr_list = [\"관광지1\",[33.5200,126.51555],\"관광지2\",[33.5030,126.50235]];\n\t\t\n\t\t\tfunction initTmap() {\n\t\t\t\t// 1. 지도 띄우기\n\t\t\t\tmap = new Tmapv2.Map(\"map_div\", {\n\t\t\t\t\tcenter : new Tmapv2.LatLng(33.4000,126.51555),\n\t\t\t\t\twidth : \"100%\",\n\t\t\t\t\theight : \"800px\",\n\t\t\t\t\tzoom : 11,\n\t\t\t\t\tzoomControl : true,\n\t\t\t\t\tscrollwheel : true\n\t\t\t\t});\n\t\t\t\taddMarkersTooMuch(attr_list);\n\t\t\t\t// 2. 시작, 도착 심볼찍기\n\t\t\t\t// 시작\n\t\t\t\t// marker_s = new Tmapv2.Marker(\n\t\t\t\t// {\n\t\t\t\t// \tposition : new Tmapv2.LatLng(33.5200,126.51555),\n\t\t\t\t// \ticon : \"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_s.png\",\n\t\t\t\t// \ticonSize : new Tmapv2.Size(24, 38),\n\t\t\t\t// \ttitle : '관광지1',\n\t\t\t\t// \tmap : map\n\t\t\t\t// });\n\t\t\t\t//marker_s.setLabel('관광지1');\n\t\t\t\t//array start point\n\t\t\t\t// marker_s = new Tmapv2.Marker(\n\t\t\t\t// {\n\t\t\t\t// \tposition : new Tmapv2.LatLng(attr_list[0][0],attr_list[0][1]),\n\t\t\t\t// \ticon : \"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_s.png\",\n\t\t\t\t// \ticonSize : new Tmapv2.Size(24, 38),\n\t\t\t\t// \tmap : map\n\t\t\t\t// });\n\t\t\t\t\n\t\t\t\t//경유지\n\t\t\t\t// marker_p = new Tmapv2.Marker(\n\t\t\t\t// {\n\t\t\t\t// \tposition : new Tmapv2.LatLng(33.5030,126.50235),\n\t\t\t\t// \ticon : \"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_b_m_p.png\",\n\t\t\t\t// \ticonSize : new Tmapv2.Size(24, 38),\n\t\t\t\t// \ttitle : '관광지2',\n\t\t\t\t// \tmap : map\n\t\t\t\t// });\n\t\t\t\t// new_marker_p2 = new Tmapv2.Marker(\n\t\t\t\t// {\n\t\t\t\t// \tposition : new Tmapv2.LatLng(33.4200,126.52555),\n\t\t\t\t// \ticon : \"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_b_m_p.png\",\n\t\t\t\t// \ticonSize : new Tmapv2.Size(24, 38),\n\t\t\t\t// \ttitle : '관광지3',\n\t\t\t\t// \tmap : map\n\t\t\t\t// });\n\t\t\t\t// //경유지\n\t\t\t\t// for (let i = 1;i < attr_list.length-1; i++)\n\t\t\t\t// {\n\t\t\t\t// \tnew_marker_p = new Tmapv2.Marker(\n\t\t\t\t// \t{\n\t\t\t\t// \t\tposition : new Tmapv2.LatLng(attr_list[i][0],attr_list[i][1]),\n\t\t\t\t// \t\ticon : \"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_e.png\",\n\t\t\t\t// \t\ticonSize : new Tmapv2.Size(24, 38),\n\t\t\t\t// \t\tmap : map\n\t\t\t\t// \t});\n\t\t\t\t// }\n\t\t\t\t\n\t\t\t\t\n\t\t\n\t\t\t\t// //도착\n\t\t\t\t// marker_e = new Tmapv2.Marker(\n\t\t\t\t// {\n\t\t\t\t// \tposition : new Tmapv2.LatLng(33.4400,126.53555),\n\t\t\t\t// \ticon : \"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_e.png\",\n\t\t\t\t// \ticonSize : new Tmapv2.Size(24, 38),\n\t\t\t\t// \ttitle : '관광지4',\n\t\t\t\t// \tmap : map\n\t\t\t\t// });\n\t\t\t\t// //도착\n\t\t\t\t// marker_e = new Tmapv2.Marker(\n\t\t\t\t// {\n\t\t\t\t// \tposition : new Tmapv2.LatLng(attr_list[0][0],attr_list[0][1]),\n\t\t\t\t// \ticon : \"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_e.png\",\n\t\t\t\t// \ticonSize : new Tmapv2.Size(24, 38),\n\t\t\t\t// \tmap : map\n\t\t\t\t// });\n\t\t\t\t// marker_s.addListener(\"click\", function(evt) \n\t\t\t\t// {\n\t\t\t\t// \tconsole.log('관광지1 push');\n\t\t\t\t// \tattr_list.push('관광지1');\n\t\t\t\t// });\n\t\t\t\t// marker_e.addListener(\"click\", function(evt) {\n\t\t\t\t// \tattr_list.push('관광지4');\n\t\t\t\t// });\n\t\t\t\t// marker_p.addListener(\"click\", function(evt) {\n\t\t\t\t// \tattr_list.push('관광지3');\n\t\t\t\t// });\n      }\n      \n\t\t//end initmap\n\t\t// function\n\t\tvar markers = new Map();\n\t\tlet check = document.createElement('checkvar');\n\t\tfunction addMarkersTooMuch(attr_list) \n\t  \t{\n\t\t\tfor (var i = 0; i < attr_list.length; i+=2) \n\t\t\t{\n\t\t\t\tlet title1 = attr_list[i];\n\t\t\t\tconsole.log(title1);\n\t\t\t\tvar lat = attr_list[i+1][0];\n\t\t\t\tvar lng = attr_list[i+1][1];\n\t\t\t\t//Marker 객체 생성.\n\t\t\t\tvar marker = new Tmapv2.Marker({\n\t\t\t\t\tposition: new Tmapv2.LatLng(lat, lng), //Marker의 중심좌표 설정.\n\t\t\t\t\ttitle: title1\n\t\t\t\t});\n\t\t\t\tmarker.setMap(map); //Marker가 표시될 Map 설정.\n\t\t\t\tmarker.addListener(\"click\", function(evt) \n\t\t\t\t{\n\t\t\t\t\tconsole.log(title1+ 'push');\n\t\t\t\t\tmarkers.set(marker,title1);\n\t\t\t\t\tretres();\n\t\t\t\t});\n\t\t\t}\n    \t}\n\t\tfunction removeMarkers() {\n\t\t\tmarkers.clear();\n\t\t}\n\n\t\tfunction Sendinfo() \n\t\t{\n                //기존 맵에 있던 정보들 초기화\n                resettingMap();\n                //JSON TYPE EDIT [S]\n                $.ajax({\n                      type : \"POST\",\n                      url : \"https://apis.openapi.sk.com/tmap/routes?version=1&format=json&callback=result\",\n                      async : false,\n                      data : {\n                        \"appKey\" : \"l7xx34194c87b04c4474abec384877be1ee4\",\n                        \"startX\" : \"126.51555\",\n                        \"startY\" : \"33.5200\",\n                        \"endX\" : \"126.53555\",\n                        \"endY\" : \"33.4400\",\n\t\t\t\t\t\t\"passList\" : \"126.50235,33.5030_126.52555,33.4200\",\n                        \"reqCoordType\" : \"WGS84GEO\",\n                        \"resCoordType\" : \"EPSG3857\",\n                        \"searchOption\" : \"0\",\n                        \"trafficInfo\" : \"Y\"\n                      },\n                      success : function(response) \n                      {\n\t\t\t\t\t\tconsole.log(\"success : \", response.features);\n                        var resultData = response.features;\n  \n                        var tDistance = \"총 거리 : \"\n                            + (resultData[0].properties.totalDistance / 1000)\n                                .toFixed(1) + \"km,\";\n                        var tTime = \" 총 시간 : \"\n                            + (resultData[0].properties.totalTime / 60)\n                                .toFixed(0) + \"분,\";\n                        var tFare = \" 총 요금 : \"\n                            + resultData[0].properties.totalFare\n                            + \"원,\";\n                        var taxiFare = \" 예상 택시 요금 : \"\n                            + resultData[0].properties.taxiFare\n                            + \"원\";\n  \n                        $(\"#result\").text(\n                        \t\ttDistance + tTime + tFare\n                        \t\t\t\t+ taxiFare);\n  \n                        //교통정보 표출 옵션값을 체크\n                          for ( var i in resultData) { //for문 [S]\n                            var geometry = resultData[i].geometry;\n                            var properties = resultData[i].properties;\n  \n                            if (geometry.type == \"LineString\") {\n                              //교통 정보도 담음\n                              chktraffic\n                                  .push(geometry.traffic);\n                              var sectionInfos = [];\n                              var trafficArr = geometry.traffic;\n  \n                              for ( var j in geometry.coordinates) {\n                                // 경로들의 결과값들을 포인트 객체로 변환 \n                                var latlng = new Tmapv2.Point(\n                                    geometry.coordinates[j][0],\n                                    geometry.coordinates[j][1]);\n                                // 포인트 객체를 받아 좌표값으로 변환\n                                var convertPoint = new Tmapv2.Projection.convertEPSG3857ToWGS84GEO(\n                                    latlng);\n  \n                                sectionInfos\n                                    .push(convertPoint);\n                              }\n  \n                              drawLine(sectionInfos,\n                                  trafficArr);\n                            } else {\n  \n                              var markerImg = \"\";\n                              var pType = \"\";\n  \n                              if (properties.pointType == \"S\") { //출발지 마커\n                                markerImg = \"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_s.png\";\n                                pType = \"S\";\n                              } else if (properties.pointType == \"E\") { //도착지 마커\n                                markerImg = \"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_e.png\";\n                                pType = \"E\";\n                              } else { //각 포인트 마커\n                                markerImg = \"http://topopen.tmap.co.kr/imgs/point.png\";\n                                pType = \"P\"\n                              }\n  \n                              // 경로들의 결과값들을 포인트 객체로 변환 \n                              var latlon = new Tmapv2.Point(\n                                  geometry.coordinates[0],\n                                  geometry.coordinates[1]);\n                              // 포인트 객체를 받아 좌표값으로 다시 변환\n                              var convertPoint = new Tmapv2.Projection.convertEPSG3857ToWGS84GEO(\n                                  latlon);\n  \n                              var routeInfoObj = {\n                                markerImage : markerImg,\n                                lng : convertPoint._lng,\n                                lat : convertPoint._lat,\n                                pointType : pType\n                              };\n                              // 마커 추가\n                              addMarkers(routeInfoObj);\n                            }\n                          }//for문 [E]\n                      }\n                    });\n                //JSON TYPE EDIT [E]\n\t\t\tinitTmap();\n      }\n\n      function addComma(num) {\n\t\t\t\tvar regexp = /\\B(?=(\\d{3})+(?!\\d))/g;\n\t\t\t\treturn num.toString().replace(regexp, ',');\n\t\t\t}\n\t\t\n\t\t\t//마커 생성하기\n\t\t\tfunction addMarkers(infoObj) {\n\t\t\t\tvar size = new Tmapv2.Size(24, 38);//아이콘 크기 설정합니다.\n\t\t\n\t\t\t\tif (infoObj.pointType == \"P\") { //포인트점일때는 아이콘 크기를 줄입니다.\n\t\t\t\t\tsize = new Tmapv2.Size(8, 8);\n\t\t\t\t}\n\t\t\n\t\t\t\tmarker_p = new Tmapv2.Marker({\n\t\t\t\t\tposition : new Tmapv2.LatLng(infoObj.lat, infoObj.lng),\n\t\t\t\t\ticon : infoObj.markerImage,\n\t\t\t\t\ticonSize : size,\n\t\t\t\t\tmap : map\n\t\t\t\t});\n\t\t\n\t\t\t\tresultMarkerArr.push(marker_p);\n\t\t\t}\n\t\t\n\t\t\t//라인그리기\n\t\t\tfunction drawLine(arrPoint, traffic) {\n\t\t\t\tvar polyline_;\n\t\t\n\t\t\t\tif (chktraffic.length != 0) {\n\t\t\n\t\t\t\t\t// 교통정보 혼잡도를 체크\n\t\t\t\t\t// strokeColor는 교통 정보상황에 다라서 변화\n\t\t\t\t\t// traffic :  0-정보없음, 1-원활, 2-서행, 3-지체, 4-정체  (black, green, yellow, orange, red)\n\t\t\n\t\t\t\t\tvar lineColor = \"\";\n\t\t\n\t\t\t\t\tif (traffic != \"0\") {\n\t\t\t\t\t\tif (traffic.length == 0) { //length가 0인것은 교통정보가 없으므로 검은색으로 표시\n\t\t\n\t\t\t\t\t\t\tlineColor = \"#06050D\";\n\t\t\t\t\t\t\t//라인그리기[S]\n\t\t\t\t\t\t\tpolyline_ = new Tmapv2.Polyline({\n\t\t\t\t\t\t\t\tpath : arrPoint,\n\t\t\t\t\t\t\t\tstrokeColor : lineColor,\n\t\t\t\t\t\t\t\tstrokeWeight : 6,\n\t\t\t\t\t\t\t\tmap : map\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tresultdrawArr.push(polyline_);\n\t\t\t\t\t\t\t//라인그리기[E]\n\t\t\t\t\t\t} else { //교통정보가 있음\n\t\t\n\t\t\t\t\t\t\tif (traffic[0][0] != 0) { //교통정보 시작인덱스가 0이 아닌경우\n\t\t\t\t\t\t\t\tvar trafficObject = \"\";\n\t\t\t\t\t\t\t\tvar tInfo = [];\n\t\t\n\t\t\t\t\t\t\t\tfor (var z = 0; z < traffic.length; z++) {\n\t\t\t\t\t\t\t\t\ttrafficObject = {\n\t\t\t\t\t\t\t\t\t\t\"startIndex\" : traffic[z][0],\n\t\t\t\t\t\t\t\t\t\t\"endIndex\" : traffic[z][1],\n\t\t\t\t\t\t\t\t\t\t\"trafficIndex\" : traffic[z][2],\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\ttInfo.push(trafficObject)\n\t\t\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t\t\tvar noInfomationPoint = [];\n\t\t\n\t\t\t\t\t\t\t\tfor (var p = 0; p < tInfo[0].startIndex; p++) {\n\t\t\t\t\t\t\t\t\tnoInfomationPoint.push(arrPoint[p]);\n\t\t\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t\t\t//라인그리기[S]\n\t\t\t\t\t\t\t\tpolyline_ = new Tmapv2.Polyline({\n\t\t\t\t\t\t\t\t\tpath : noInfomationPoint,\n\t\t\t\t\t\t\t\t\tstrokeColor : \"#06050D\",\n\t\t\t\t\t\t\t\t\tstrokeWeight : 6,\n\t\t\t\t\t\t\t\t\tmap : map\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t//라인그리기[E]\n\t\t\t\t\t\t\t\tresultdrawArr.push(polyline_);\n\t\t\n\t\t\t\t\t\t\t\tfor (var x = 0; x < tInfo.length; x++) {\n\t\t\t\t\t\t\t\t\tvar sectionPoint = []; //구간선언\n\t\t\n\t\t\t\t\t\t\t\t\tfor (var y = tInfo[x].startIndex; y <= tInfo[x].endIndex; y++) {\n\t\t\t\t\t\t\t\t\t\tsectionPoint.push(arrPoint[y]);\n\t\t\t\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t\t\t\tif (tInfo[x].trafficIndex == 0) {\n\t\t\t\t\t\t\t\t\t\tlineColor = \"#06050D\";\n\t\t\t\t\t\t\t\t\t} else if (tInfo[x].trafficIndex == 1) {\n\t\t\t\t\t\t\t\t\t\tlineColor = \"#61AB25\";\n\t\t\t\t\t\t\t\t\t} else if (tInfo[x].trafficIndex == 2) {\n\t\t\t\t\t\t\t\t\t\tlineColor = \"#FFFF00\";\n\t\t\t\t\t\t\t\t\t} else if (tInfo[x].trafficIndex == 3) {\n\t\t\t\t\t\t\t\t\t\tlineColor = \"#E87506\";\n\t\t\t\t\t\t\t\t\t} else if (tInfo[x].trafficIndex == 4) {\n\t\t\t\t\t\t\t\t\t\tlineColor = \"#D61125\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t\t\t\t//라인그리기[S]\n\t\t\t\t\t\t\t\t\tpolyline_ = new Tmapv2.Polyline({\n\t\t\t\t\t\t\t\t\t\tpath : sectionPoint,\n\t\t\t\t\t\t\t\t\t\tstrokeColor : lineColor,\n\t\t\t\t\t\t\t\t\t\tstrokeWeight : 6,\n\t\t\t\t\t\t\t\t\t\tmap : map\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t//라인그리기[E]\n\t\t\t\t\t\t\t\t\tresultdrawArr.push(polyline_);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else { //0부터 시작하는 경우\n\t\t\n\t\t\t\t\t\t\t\tvar trafficObject = \"\";\n\t\t\t\t\t\t\t\tvar tInfo = [];\n\t\t\n\t\t\t\t\t\t\t\tfor (var z = 0; z < traffic.length; z++) {\n\t\t\t\t\t\t\t\t\ttrafficObject = {\n\t\t\t\t\t\t\t\t\t\t\"startIndex\" : traffic[z][0],\n\t\t\t\t\t\t\t\t\t\t\"endIndex\" : traffic[z][1],\n\t\t\t\t\t\t\t\t\t\t\"trafficIndex\" : traffic[z][2],\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\ttInfo.push(trafficObject)\n\t\t\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t\t\tfor (var x = 0; x < tInfo.length; x++) {\n\t\t\t\t\t\t\t\t\tvar sectionPoint = []; //구간선언\n\t\t\n\t\t\t\t\t\t\t\t\tfor (var y = tInfo[x].startIndex; y <= tInfo[x].endIndex; y++) {\n\t\t\t\t\t\t\t\t\t\tsectionPoint.push(arrPoint[y]);\n\t\t\t\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t\t\t\tif (tInfo[x].trafficIndex == 0) {\n\t\t\t\t\t\t\t\t\t\tlineColor = \"#06050D\";\n\t\t\t\t\t\t\t\t\t} else if (tInfo[x].trafficIndex == 1) {\n\t\t\t\t\t\t\t\t\t\tlineColor = \"#61AB25\";\n\t\t\t\t\t\t\t\t\t} else if (tInfo[x].trafficIndex == 2) {\n\t\t\t\t\t\t\t\t\t\tlineColor = \"#FFFF00\";\n\t\t\t\t\t\t\t\t\t} else if (tInfo[x].trafficIndex == 3) {\n\t\t\t\t\t\t\t\t\t\tlineColor = \"#E87506\";\n\t\t\t\t\t\t\t\t\t} else if (tInfo[x].trafficIndex == 4) {\n\t\t\t\t\t\t\t\t\t\tlineColor = \"#D61125\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t\t\t\t//라인그리기[S]\n\t\t\t\t\t\t\t\t\tpolyline_ = new Tmapv2.Polyline({\n\t\t\t\t\t\t\t\t\t\tpath : sectionPoint,\n\t\t\t\t\t\t\t\t\t\tstrokeColor : lineColor,\n\t\t\t\t\t\t\t\t\t\tstrokeWeight : 6,\n\t\t\t\t\t\t\t\t\t\tmap : map\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t//라인그리기[E]\n\t\t\t\t\t\t\t\t\tresultdrawArr.push(polyline_);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tpolyline_ = new Tmapv2.Polyline({\n\t\t\t\t\t\tpath : arrPoint,\n\t\t\t\t\t\tstrokeColor : \"#DD0000\",\n\t\t\t\t\t\tstrokeWeight : 6,\n\t\t\t\t\t\tmap : map\n\t\t\t\t\t});\n\t\t\t\t\tresultdrawArr.push(polyline_);\n\t\t\t\t}\n\t\t\n\t\t\t}\n\t\t\t//초기화 기능\n\t\t\tfunction resettingMap() {\n\t\t\t\t//기존마커는 삭제\n\t\t\t\tmarker_s.setMap(null);\n\t\t\t\tmarker_e.setMap(null);\n\t\t\n\t\t\t\tif (resultMarkerArr.length > 0) {\n\t\t\t\t\tfor (var i = 0; i < resultMarkerArr.length; i++) {\n\t\t\t\t\t\tresultMarkerArr[i].setMap(null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\tif (resultdrawArr.length > 0) {\n\t\t\t\t\tfor (var i = 0; i < resultdrawArr.length; i++) {\n\t\t\t\t\t\tresultdrawArr[i].setMap(null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\tchktraffic = [];\n\t\t\t\tdrawInfoArr = [];\n\t\t\t\tresultMarkerArr = [];\n\t\t\t\tresultdrawArr = [];\n\t\t\t}\n      //지도 타입 변경.\n      function MapType(type){\n        if(\"SATELLITE\" == type){\n            map.setMapType(Tmapv2.Map.MapType.SATELLITE);\n        }else if(\"HYBRID\" == type){\n            map.setMapType(Tmapv2.Map.MapType.HYBRID)\n        }else if(\"ROAD\" == type){\n            map.setMapType(Tmapv2.Map.MapType.ROAD)\n        }\n      }\n      function retres()\n\t  {\n\t\tconsole.log('retres()');\n\t\tfor(let item of markers)\n\t\t{\n\t\t\tconsole.log('item : ', item[1]);\n\t\t\tstr+='<div><h3>'+item[1]+'</h3>\\\n\t\t\t<button class=\"btn\" onclick=\"deletemark(item[1])\">삭제</button></div>';\n\t\t}\n\t\t$(\"#result2\").html(str);\n\t  }\n\t  function deletemark()\n\t  {\n\t\tconsole.log('delete click');\n\t  };\n\t  retres();\n\t  initTmap();\n   `;\n    script.type = \"text/javascript\";\n    script.async = \"async\";\n    document.head.appendChild(script);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map_div\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 510,\n    columnNumber: 5\n  }, this);\n}; //axios Test//\n// function sendaxios()\n// {\n//   // 3. 경로탐색 API 사용요청\n//   // let headers = {\n//   //   'content-type': 'application/x-www-form-urlencoded',\n//   //   'appKey': 'l7xx34194c87b04c4474abec384877be1ee4'\n//   // };\n//   let body = {\n//     'startX': \"126.9850380932383\",\n//     'startY': \"37.566567545861645\",\n//     'endX': \"127.10331814639885\",\n//     'endY': \"37.403049076341794\",\n//     'reqCoordType': \"WGS84GEO\",\n//     'resCoordType': \"EPSG3857\",\n//     'searchOption': '0',\n//     'trafficInfo': 'Y'\n//   };\n//   let dd = qs.stringify(body);\n//   axios.post(\"https://apis.openapi.sk.com/tmap/routes?version=1&format=json&callback=result\",dd,\n//   {\n//     headers:{'appKey': 'l7xx34194c87b04c4474abec384877be1ee4'}\n//   }).then((res) => {console.log(res)}).then((err) => {console.log(err)});\n// }\n//axios Test end//\n\n\n_s(MapWrapper, \"O7I/8QmKlVLeEnrT8T6VrFLDqTU=\");\n\n_c = MapWrapper;\n\nfunction FullScreenMap() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PanelHeader, {\n      size: \"sm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"map\",\n            className: \"map\",\n            style: {\n              position: \"relative\",\n              overflow: \"hidden\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => MapType('ROAD'),\n              children: \"ROAD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => MapType('SATELLITE'),\n              children: \"SATELLITE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => MapType('HYBRID'),\n              children: \"HYBRID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"map_wrap\",\n              class: \"map_wrap\",\n              children: [/*#__PURE__*/_jsxDEV(MapWrapper, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 560,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                id: \"result\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 6\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"map_act_btn_wrap clear_box\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c2 = FullScreenMap;\nexport default FullScreenMap;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MapWrapper\");\n$RefreshReg$(_c2, \"FullScreenMap\");","map":{"version":3,"sources":["/Users/youlee/Desktop/test222/react/testapp/src/views/Maps.js"],"names":["Row","Col","Card","CardHeader","CardBody","PanelHeader","React","useEffect","useState","ReactDOM","MapWrapper","aaa","setAaa","script","document","createElement","innerHTML","type","async","head","appendChild","FullScreenMap","position","overflow","MapType"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,UAAzB,EAAqCC,QAArC,QAAqD,YAArD,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;AACA;AACA;;;;;AAGA,MAAMC,UAAU,GAAG,MACnB;AAAA;;AACE,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBJ,QAAQ,EAA9B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACHF,IAAAA,MAAM,CAACG,SAAP,GAAoB;AACrjdC;AAkdGH,IAAAA,MAAM,CAACI,IAAP,GAAc,iBAAd;AACAJ,IAAAA,MAAM,CAACK,KAAP,GAAe,OAAf;AACAJ,IAAAA,QAAQ,CAACK,IAAT,CAAcC,WAAd,CAA0BP,MAA1B;AACD,GAvdQ,EAudN,EAvdM,CAAT;AAwdA,sBACE;AAAK,IAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CA9dD,C,CAieA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GA1fMH,U;;KAAAA,U;;AA4fN,SAASW,aAAT,GACA;AACE,sBACE;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,IAAI,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACM,QAAC,IAAD;AAAA,+BACE,QAAC,QAAD;AAAA,iCACE;AACE,YAAA,EAAE,EAAC,KADL;AAEE,YAAA,SAAS,EAAC,KAFZ;AAGE,YAAA,KAAK,EAAE;AAAEC,cAAAA,QAAQ,EAAE,UAAZ;AAAwBC,cAAAA,QAAQ,EAAE;AAAlC,aAHT;AAAA,oCAKA;AAAQ,cAAA,OAAO,EAAE,MAAIC,OAAO,CAAC,MAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALA,eAMA;AAAQ,cAAA,OAAO,EAAE,MAAIA,OAAO,CAAC,WAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANA,eAOA;AAAQ,cAAA,OAAO,EAAE,MAAIA,OAAO,CAAC,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPA,eASF;AAAK,cAAA,EAAE,EAAC,UAAR;AAAmB,cAAA,KAAK,EAAC,UAAzB;AAAA,sCACA,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,sBADA,eAET;AAAG,gBAAA,EAAE,EAAC;AAAN;AAAA;AAAA;AAAA;AAAA,sBAFS;AAAA;AAAA;AAAA;AAAA;AAAA,oBATE,eAaF;AAAK,cAAA,KAAK,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,oBAbE,eAcF;AAAA;AAAA;AAAA;AAAA,oBAdE;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AA2BD;;MA7BQH,a;AA8BT,eAAeA,aAAf","sourcesContent":["/*!\n\n=========================================================\n* Now UI Dashboard React - v1.5.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/now-ui-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/now-ui-dashboard-react/blob/main/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n// import React from \"react\";\n\n// // reactstrap components\nimport { Row, Col, Card, CardHeader, CardBody } from \"reactstrap\";\n\n// // core components\nimport PanelHeader from \"components/PanelHeader/PanelHeader.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport ReactDOM from \"react-dom\";\n\n// import 'bootstrap/dist/css/bootstrap.css';\n// import './css/bootstrap.min.css';\n// import './css/style.css';\n\n\nconst MapWrapper = () => \n{\n  const [aaa, setAaa] = useState()\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n\tscript.innerHTML = `\n\t  var map;\n\t  var str=\"\";\n\t\t\tvar markerInfo;\n\t\t\t//출발지,도착지 마커\n\t\t\tvar marker_s, marker_e, marker_p, new_marker_p2;\n\t\t\t//경로그림정보\n\t\t\tvar drawInfoArr = [];\n\t\t\tvar drawInfoArr2 = [];\n\t\t\n\t\t\tvar chktraffic = [];\n\t\t\tvar resultdrawArr = [];\n\t\t\tvar resultMarkerArr = [];\n\t\t\t//관광지는 n x [2] 열은 위도,경도\n\t\t\tvar attr_list = [\"관광지1\",[33.5200,126.51555],\"관광지2\",[33.5030,126.50235]];\n\t\t\n\t\t\tfunction initTmap() {\n\t\t\t\t// 1. 지도 띄우기\n\t\t\t\tmap = new Tmapv2.Map(\"map_div\", {\n\t\t\t\t\tcenter : new Tmapv2.LatLng(33.4000,126.51555),\n\t\t\t\t\twidth : \"100%\",\n\t\t\t\t\theight : \"800px\",\n\t\t\t\t\tzoom : 11,\n\t\t\t\t\tzoomControl : true,\n\t\t\t\t\tscrollwheel : true\n\t\t\t\t});\n\t\t\t\taddMarkersTooMuch(attr_list);\n\t\t\t\t// 2. 시작, 도착 심볼찍기\n\t\t\t\t// 시작\n\t\t\t\t// marker_s = new Tmapv2.Marker(\n\t\t\t\t// {\n\t\t\t\t// \tposition : new Tmapv2.LatLng(33.5200,126.51555),\n\t\t\t\t// \ticon : \"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_s.png\",\n\t\t\t\t// \ticonSize : new Tmapv2.Size(24, 38),\n\t\t\t\t// \ttitle : '관광지1',\n\t\t\t\t// \tmap : map\n\t\t\t\t// });\n\t\t\t\t//marker_s.setLabel('관광지1');\n\t\t\t\t//array start point\n\t\t\t\t// marker_s = new Tmapv2.Marker(\n\t\t\t\t// {\n\t\t\t\t// \tposition : new Tmapv2.LatLng(attr_list[0][0],attr_list[0][1]),\n\t\t\t\t// \ticon : \"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_s.png\",\n\t\t\t\t// \ticonSize : new Tmapv2.Size(24, 38),\n\t\t\t\t// \tmap : map\n\t\t\t\t// });\n\t\t\t\t\n\t\t\t\t//경유지\n\t\t\t\t// marker_p = new Tmapv2.Marker(\n\t\t\t\t// {\n\t\t\t\t// \tposition : new Tmapv2.LatLng(33.5030,126.50235),\n\t\t\t\t// \ticon : \"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_b_m_p.png\",\n\t\t\t\t// \ticonSize : new Tmapv2.Size(24, 38),\n\t\t\t\t// \ttitle : '관광지2',\n\t\t\t\t// \tmap : map\n\t\t\t\t// });\n\t\t\t\t// new_marker_p2 = new Tmapv2.Marker(\n\t\t\t\t// {\n\t\t\t\t// \tposition : new Tmapv2.LatLng(33.4200,126.52555),\n\t\t\t\t// \ticon : \"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_b_m_p.png\",\n\t\t\t\t// \ticonSize : new Tmapv2.Size(24, 38),\n\t\t\t\t// \ttitle : '관광지3',\n\t\t\t\t// \tmap : map\n\t\t\t\t// });\n\t\t\t\t// //경유지\n\t\t\t\t// for (let i = 1;i < attr_list.length-1; i++)\n\t\t\t\t// {\n\t\t\t\t// \tnew_marker_p = new Tmapv2.Marker(\n\t\t\t\t// \t{\n\t\t\t\t// \t\tposition : new Tmapv2.LatLng(attr_list[i][0],attr_list[i][1]),\n\t\t\t\t// \t\ticon : \"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_e.png\",\n\t\t\t\t// \t\ticonSize : new Tmapv2.Size(24, 38),\n\t\t\t\t// \t\tmap : map\n\t\t\t\t// \t});\n\t\t\t\t// }\n\t\t\t\t\n\t\t\t\t\n\t\t\n\t\t\t\t// //도착\n\t\t\t\t// marker_e = new Tmapv2.Marker(\n\t\t\t\t// {\n\t\t\t\t// \tposition : new Tmapv2.LatLng(33.4400,126.53555),\n\t\t\t\t// \ticon : \"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_e.png\",\n\t\t\t\t// \ticonSize : new Tmapv2.Size(24, 38),\n\t\t\t\t// \ttitle : '관광지4',\n\t\t\t\t// \tmap : map\n\t\t\t\t// });\n\t\t\t\t// //도착\n\t\t\t\t// marker_e = new Tmapv2.Marker(\n\t\t\t\t// {\n\t\t\t\t// \tposition : new Tmapv2.LatLng(attr_list[0][0],attr_list[0][1]),\n\t\t\t\t// \ticon : \"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_e.png\",\n\t\t\t\t// \ticonSize : new Tmapv2.Size(24, 38),\n\t\t\t\t// \tmap : map\n\t\t\t\t// });\n\t\t\t\t// marker_s.addListener(\"click\", function(evt) \n\t\t\t\t// {\n\t\t\t\t// \tconsole.log('관광지1 push');\n\t\t\t\t// \tattr_list.push('관광지1');\n\t\t\t\t// });\n\t\t\t\t// marker_e.addListener(\"click\", function(evt) {\n\t\t\t\t// \tattr_list.push('관광지4');\n\t\t\t\t// });\n\t\t\t\t// marker_p.addListener(\"click\", function(evt) {\n\t\t\t\t// \tattr_list.push('관광지3');\n\t\t\t\t// });\n      }\n      \n\t\t//end initmap\n\t\t// function\n\t\tvar markers = new Map();\n\t\tlet check = document.createElement('checkvar');\n\t\tfunction addMarkersTooMuch(attr_list) \n\t  \t{\n\t\t\tfor (var i = 0; i < attr_list.length; i+=2) \n\t\t\t{\n\t\t\t\tlet title1 = attr_list[i];\n\t\t\t\tconsole.log(title1);\n\t\t\t\tvar lat = attr_list[i+1][0];\n\t\t\t\tvar lng = attr_list[i+1][1];\n\t\t\t\t//Marker 객체 생성.\n\t\t\t\tvar marker = new Tmapv2.Marker({\n\t\t\t\t\tposition: new Tmapv2.LatLng(lat, lng), //Marker의 중심좌표 설정.\n\t\t\t\t\ttitle: title1\n\t\t\t\t});\n\t\t\t\tmarker.setMap(map); //Marker가 표시될 Map 설정.\n\t\t\t\tmarker.addListener(\"click\", function(evt) \n\t\t\t\t{\n\t\t\t\t\tconsole.log(title1+ 'push');\n\t\t\t\t\tmarkers.set(marker,title1);\n\t\t\t\t\tretres();\n\t\t\t\t});\n\t\t\t}\n    \t}\n\t\tfunction removeMarkers() {\n\t\t\tmarkers.clear();\n\t\t}\n\n\t\tfunction Sendinfo() \n\t\t{\n                //기존 맵에 있던 정보들 초기화\n                resettingMap();\n                //JSON TYPE EDIT [S]\n                $.ajax({\n                      type : \"POST\",\n                      url : \"https://apis.openapi.sk.com/tmap/routes?version=1&format=json&callback=result\",\n                      async : false,\n                      data : {\n                        \"appKey\" : \"l7xx34194c87b04c4474abec384877be1ee4\",\n                        \"startX\" : \"126.51555\",\n                        \"startY\" : \"33.5200\",\n                        \"endX\" : \"126.53555\",\n                        \"endY\" : \"33.4400\",\n\t\t\t\t\t\t\"passList\" : \"126.50235,33.5030_126.52555,33.4200\",\n                        \"reqCoordType\" : \"WGS84GEO\",\n                        \"resCoordType\" : \"EPSG3857\",\n                        \"searchOption\" : \"0\",\n                        \"trafficInfo\" : \"Y\"\n                      },\n                      success : function(response) \n                      {\n\t\t\t\t\t\tconsole.log(\"success : \", response.features);\n                        var resultData = response.features;\n  \n                        var tDistance = \"총 거리 : \"\n                            + (resultData[0].properties.totalDistance / 1000)\n                                .toFixed(1) + \"km,\";\n                        var tTime = \" 총 시간 : \"\n                            + (resultData[0].properties.totalTime / 60)\n                                .toFixed(0) + \"분,\";\n                        var tFare = \" 총 요금 : \"\n                            + resultData[0].properties.totalFare\n                            + \"원,\";\n                        var taxiFare = \" 예상 택시 요금 : \"\n                            + resultData[0].properties.taxiFare\n                            + \"원\";\n  \n                        $(\"#result\").text(\n                        \t\ttDistance + tTime + tFare\n                        \t\t\t\t+ taxiFare);\n  \n                        //교통정보 표출 옵션값을 체크\n                          for ( var i in resultData) { //for문 [S]\n                            var geometry = resultData[i].geometry;\n                            var properties = resultData[i].properties;\n  \n                            if (geometry.type == \"LineString\") {\n                              //교통 정보도 담음\n                              chktraffic\n                                  .push(geometry.traffic);\n                              var sectionInfos = [];\n                              var trafficArr = geometry.traffic;\n  \n                              for ( var j in geometry.coordinates) {\n                                // 경로들의 결과값들을 포인트 객체로 변환 \n                                var latlng = new Tmapv2.Point(\n                                    geometry.coordinates[j][0],\n                                    geometry.coordinates[j][1]);\n                                // 포인트 객체를 받아 좌표값으로 변환\n                                var convertPoint = new Tmapv2.Projection.convertEPSG3857ToWGS84GEO(\n                                    latlng);\n  \n                                sectionInfos\n                                    .push(convertPoint);\n                              }\n  \n                              drawLine(sectionInfos,\n                                  trafficArr);\n                            } else {\n  \n                              var markerImg = \"\";\n                              var pType = \"\";\n  \n                              if (properties.pointType == \"S\") { //출발지 마커\n                                markerImg = \"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_s.png\";\n                                pType = \"S\";\n                              } else if (properties.pointType == \"E\") { //도착지 마커\n                                markerImg = \"http://tmapapi.sktelecom.com/upload/tmap/marker/pin_r_m_e.png\";\n                                pType = \"E\";\n                              } else { //각 포인트 마커\n                                markerImg = \"http://topopen.tmap.co.kr/imgs/point.png\";\n                                pType = \"P\"\n                              }\n  \n                              // 경로들의 결과값들을 포인트 객체로 변환 \n                              var latlon = new Tmapv2.Point(\n                                  geometry.coordinates[0],\n                                  geometry.coordinates[1]);\n                              // 포인트 객체를 받아 좌표값으로 다시 변환\n                              var convertPoint = new Tmapv2.Projection.convertEPSG3857ToWGS84GEO(\n                                  latlon);\n  \n                              var routeInfoObj = {\n                                markerImage : markerImg,\n                                lng : convertPoint._lng,\n                                lat : convertPoint._lat,\n                                pointType : pType\n                              };\n                              // 마커 추가\n                              addMarkers(routeInfoObj);\n                            }\n                          }//for문 [E]\n                      }\n                    });\n                //JSON TYPE EDIT [E]\n\t\t\tinitTmap();\n      }\n\n      function addComma(num) {\n\t\t\t\tvar regexp = /\\B(?=(\\d{3})+(?!\\d))/g;\n\t\t\t\treturn num.toString().replace(regexp, ',');\n\t\t\t}\n\t\t\n\t\t\t//마커 생성하기\n\t\t\tfunction addMarkers(infoObj) {\n\t\t\t\tvar size = new Tmapv2.Size(24, 38);//아이콘 크기 설정합니다.\n\t\t\n\t\t\t\tif (infoObj.pointType == \"P\") { //포인트점일때는 아이콘 크기를 줄입니다.\n\t\t\t\t\tsize = new Tmapv2.Size(8, 8);\n\t\t\t\t}\n\t\t\n\t\t\t\tmarker_p = new Tmapv2.Marker({\n\t\t\t\t\tposition : new Tmapv2.LatLng(infoObj.lat, infoObj.lng),\n\t\t\t\t\ticon : infoObj.markerImage,\n\t\t\t\t\ticonSize : size,\n\t\t\t\t\tmap : map\n\t\t\t\t});\n\t\t\n\t\t\t\tresultMarkerArr.push(marker_p);\n\t\t\t}\n\t\t\n\t\t\t//라인그리기\n\t\t\tfunction drawLine(arrPoint, traffic) {\n\t\t\t\tvar polyline_;\n\t\t\n\t\t\t\tif (chktraffic.length != 0) {\n\t\t\n\t\t\t\t\t// 교통정보 혼잡도를 체크\n\t\t\t\t\t// strokeColor는 교통 정보상황에 다라서 변화\n\t\t\t\t\t// traffic :  0-정보없음, 1-원활, 2-서행, 3-지체, 4-정체  (black, green, yellow, orange, red)\n\t\t\n\t\t\t\t\tvar lineColor = \"\";\n\t\t\n\t\t\t\t\tif (traffic != \"0\") {\n\t\t\t\t\t\tif (traffic.length == 0) { //length가 0인것은 교통정보가 없으므로 검은색으로 표시\n\t\t\n\t\t\t\t\t\t\tlineColor = \"#06050D\";\n\t\t\t\t\t\t\t//라인그리기[S]\n\t\t\t\t\t\t\tpolyline_ = new Tmapv2.Polyline({\n\t\t\t\t\t\t\t\tpath : arrPoint,\n\t\t\t\t\t\t\t\tstrokeColor : lineColor,\n\t\t\t\t\t\t\t\tstrokeWeight : 6,\n\t\t\t\t\t\t\t\tmap : map\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tresultdrawArr.push(polyline_);\n\t\t\t\t\t\t\t//라인그리기[E]\n\t\t\t\t\t\t} else { //교통정보가 있음\n\t\t\n\t\t\t\t\t\t\tif (traffic[0][0] != 0) { //교통정보 시작인덱스가 0이 아닌경우\n\t\t\t\t\t\t\t\tvar trafficObject = \"\";\n\t\t\t\t\t\t\t\tvar tInfo = [];\n\t\t\n\t\t\t\t\t\t\t\tfor (var z = 0; z < traffic.length; z++) {\n\t\t\t\t\t\t\t\t\ttrafficObject = {\n\t\t\t\t\t\t\t\t\t\t\"startIndex\" : traffic[z][0],\n\t\t\t\t\t\t\t\t\t\t\"endIndex\" : traffic[z][1],\n\t\t\t\t\t\t\t\t\t\t\"trafficIndex\" : traffic[z][2],\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\ttInfo.push(trafficObject)\n\t\t\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t\t\tvar noInfomationPoint = [];\n\t\t\n\t\t\t\t\t\t\t\tfor (var p = 0; p < tInfo[0].startIndex; p++) {\n\t\t\t\t\t\t\t\t\tnoInfomationPoint.push(arrPoint[p]);\n\t\t\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t\t\t//라인그리기[S]\n\t\t\t\t\t\t\t\tpolyline_ = new Tmapv2.Polyline({\n\t\t\t\t\t\t\t\t\tpath : noInfomationPoint,\n\t\t\t\t\t\t\t\t\tstrokeColor : \"#06050D\",\n\t\t\t\t\t\t\t\t\tstrokeWeight : 6,\n\t\t\t\t\t\t\t\t\tmap : map\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t//라인그리기[E]\n\t\t\t\t\t\t\t\tresultdrawArr.push(polyline_);\n\t\t\n\t\t\t\t\t\t\t\tfor (var x = 0; x < tInfo.length; x++) {\n\t\t\t\t\t\t\t\t\tvar sectionPoint = []; //구간선언\n\t\t\n\t\t\t\t\t\t\t\t\tfor (var y = tInfo[x].startIndex; y <= tInfo[x].endIndex; y++) {\n\t\t\t\t\t\t\t\t\t\tsectionPoint.push(arrPoint[y]);\n\t\t\t\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t\t\t\tif (tInfo[x].trafficIndex == 0) {\n\t\t\t\t\t\t\t\t\t\tlineColor = \"#06050D\";\n\t\t\t\t\t\t\t\t\t} else if (tInfo[x].trafficIndex == 1) {\n\t\t\t\t\t\t\t\t\t\tlineColor = \"#61AB25\";\n\t\t\t\t\t\t\t\t\t} else if (tInfo[x].trafficIndex == 2) {\n\t\t\t\t\t\t\t\t\t\tlineColor = \"#FFFF00\";\n\t\t\t\t\t\t\t\t\t} else if (tInfo[x].trafficIndex == 3) {\n\t\t\t\t\t\t\t\t\t\tlineColor = \"#E87506\";\n\t\t\t\t\t\t\t\t\t} else if (tInfo[x].trafficIndex == 4) {\n\t\t\t\t\t\t\t\t\t\tlineColor = \"#D61125\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t\t\t\t//라인그리기[S]\n\t\t\t\t\t\t\t\t\tpolyline_ = new Tmapv2.Polyline({\n\t\t\t\t\t\t\t\t\t\tpath : sectionPoint,\n\t\t\t\t\t\t\t\t\t\tstrokeColor : lineColor,\n\t\t\t\t\t\t\t\t\t\tstrokeWeight : 6,\n\t\t\t\t\t\t\t\t\t\tmap : map\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t//라인그리기[E]\n\t\t\t\t\t\t\t\t\tresultdrawArr.push(polyline_);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else { //0부터 시작하는 경우\n\t\t\n\t\t\t\t\t\t\t\tvar trafficObject = \"\";\n\t\t\t\t\t\t\t\tvar tInfo = [];\n\t\t\n\t\t\t\t\t\t\t\tfor (var z = 0; z < traffic.length; z++) {\n\t\t\t\t\t\t\t\t\ttrafficObject = {\n\t\t\t\t\t\t\t\t\t\t\"startIndex\" : traffic[z][0],\n\t\t\t\t\t\t\t\t\t\t\"endIndex\" : traffic[z][1],\n\t\t\t\t\t\t\t\t\t\t\"trafficIndex\" : traffic[z][2],\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\ttInfo.push(trafficObject)\n\t\t\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t\t\tfor (var x = 0; x < tInfo.length; x++) {\n\t\t\t\t\t\t\t\t\tvar sectionPoint = []; //구간선언\n\t\t\n\t\t\t\t\t\t\t\t\tfor (var y = tInfo[x].startIndex; y <= tInfo[x].endIndex; y++) {\n\t\t\t\t\t\t\t\t\t\tsectionPoint.push(arrPoint[y]);\n\t\t\t\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t\t\t\tif (tInfo[x].trafficIndex == 0) {\n\t\t\t\t\t\t\t\t\t\tlineColor = \"#06050D\";\n\t\t\t\t\t\t\t\t\t} else if (tInfo[x].trafficIndex == 1) {\n\t\t\t\t\t\t\t\t\t\tlineColor = \"#61AB25\";\n\t\t\t\t\t\t\t\t\t} else if (tInfo[x].trafficIndex == 2) {\n\t\t\t\t\t\t\t\t\t\tlineColor = \"#FFFF00\";\n\t\t\t\t\t\t\t\t\t} else if (tInfo[x].trafficIndex == 3) {\n\t\t\t\t\t\t\t\t\t\tlineColor = \"#E87506\";\n\t\t\t\t\t\t\t\t\t} else if (tInfo[x].trafficIndex == 4) {\n\t\t\t\t\t\t\t\t\t\tlineColor = \"#D61125\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t\t\t\t//라인그리기[S]\n\t\t\t\t\t\t\t\t\tpolyline_ = new Tmapv2.Polyline({\n\t\t\t\t\t\t\t\t\t\tpath : sectionPoint,\n\t\t\t\t\t\t\t\t\t\tstrokeColor : lineColor,\n\t\t\t\t\t\t\t\t\t\tstrokeWeight : 6,\n\t\t\t\t\t\t\t\t\t\tmap : map\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t//라인그리기[E]\n\t\t\t\t\t\t\t\t\tresultdrawArr.push(polyline_);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tpolyline_ = new Tmapv2.Polyline({\n\t\t\t\t\t\tpath : arrPoint,\n\t\t\t\t\t\tstrokeColor : \"#DD0000\",\n\t\t\t\t\t\tstrokeWeight : 6,\n\t\t\t\t\t\tmap : map\n\t\t\t\t\t});\n\t\t\t\t\tresultdrawArr.push(polyline_);\n\t\t\t\t}\n\t\t\n\t\t\t}\n\t\t\t//초기화 기능\n\t\t\tfunction resettingMap() {\n\t\t\t\t//기존마커는 삭제\n\t\t\t\tmarker_s.setMap(null);\n\t\t\t\tmarker_e.setMap(null);\n\t\t\n\t\t\t\tif (resultMarkerArr.length > 0) {\n\t\t\t\t\tfor (var i = 0; i < resultMarkerArr.length; i++) {\n\t\t\t\t\t\tresultMarkerArr[i].setMap(null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\tif (resultdrawArr.length > 0) {\n\t\t\t\t\tfor (var i = 0; i < resultdrawArr.length; i++) {\n\t\t\t\t\t\tresultdrawArr[i].setMap(null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\tchktraffic = [];\n\t\t\t\tdrawInfoArr = [];\n\t\t\t\tresultMarkerArr = [];\n\t\t\t\tresultdrawArr = [];\n\t\t\t}\n      //지도 타입 변경.\n      function MapType(type){\n        if(\"SATELLITE\" == type){\n            map.setMapType(Tmapv2.Map.MapType.SATELLITE);\n        }else if(\"HYBRID\" == type){\n            map.setMapType(Tmapv2.Map.MapType.HYBRID)\n        }else if(\"ROAD\" == type){\n            map.setMapType(Tmapv2.Map.MapType.ROAD)\n        }\n      }\n      function retres()\n\t  {\n\t\tconsole.log('retres()');\n\t\tfor(let item of markers)\n\t\t{\n\t\t\tconsole.log('item : ', item[1]);\n\t\t\tstr+='<div><h3>'+item[1]+'</h3>\\\n\t\t\t<button class=\"btn\" onclick=\"deletemark(item[1])\">삭제</button></div>';\n\t\t}\n\t\t$(\"#result2\").html(str);\n\t  }\n\t  function deletemark()\n\t  {\n\t\tconsole.log('delete click');\n\t  };\n\t  retres();\n\t  initTmap();\n   `;\n    script.type = \"text/javascript\";\n    script.async = \"async\";\n    document.head.appendChild(script);\n  }, []);\n  return (\n    <div id=\"map_div\"/>\n  );\n}\n\n\n//axios Test//\n// function sendaxios()\n// {\n//   // 3. 경로탐색 API 사용요청\n//   // let headers = {\n//   //   'content-type': 'application/x-www-form-urlencoded',\n//   //   'appKey': 'l7xx34194c87b04c4474abec384877be1ee4'\n//   // };\n  \n//   let body = {\n//     'startX': \"126.9850380932383\",\n//     'startY': \"37.566567545861645\",\n//     'endX': \"127.10331814639885\",\n//     'endY': \"37.403049076341794\",\n//     'reqCoordType': \"WGS84GEO\",\n//     'resCoordType': \"EPSG3857\",\n//     'searchOption': '0',\n//     'trafficInfo': 'Y'\n//   };\n//   let dd = qs.stringify(body);\n//   axios.post(\"https://apis.openapi.sk.com/tmap/routes?version=1&format=json&callback=result\",dd,\n//   {\n//     headers:{'appKey': 'l7xx34194c87b04c4474abec384877be1ee4'}\n//   }).then((res) => {console.log(res)}).then((err) => {console.log(err)});\n// }\n//axios Test end//\n\nfunction FullScreenMap() \n{\n  return (\n    <>\n      <PanelHeader size=\"sm\" />\n      <div className=\"content\">\n            <Card>\n              <CardBody>\n                <div\n                  id=\"map\"\n                  className=\"map\"\n                  style={{ position: \"relative\", overflow: \"hidden\" }}\n                >\n                <button onClick={()=>MapType('ROAD')}>ROAD</button>\n                <button onClick={()=>MapType('SATELLITE')}>SATELLITE</button>\n                <button onClick={()=>MapType('HYBRID')}>HYBRID</button>\n            \n              <div id=\"map_wrap\" class=\"map_wrap\">\n              <MapWrapper/>\n\t\t\t  <p id=\"result\"/>\n              </div>\n              <div class=\"map_act_btn_wrap clear_box\"></div>\n              <br />\n                </div>\n              </CardBody>\n            </Card>\n      </div>\n    </>\n  );\n}\nexport default FullScreenMap;"]},"metadata":{},"sourceType":"module"}