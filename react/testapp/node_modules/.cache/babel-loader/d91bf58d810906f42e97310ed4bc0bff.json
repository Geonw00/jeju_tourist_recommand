{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\n\nconst useInterval = (callback, delay) => {\n  _s();\n\n  const [savedCallback, setSavedCallback] = useState(null); // useState사용\n  // callback이 바뀔 때마다 실행\n  // 첫 실행에 callback이 한 번 들어옴 -> 리렌더링 -> 다시 들어옴 -> 리렌더링 -> .. 무한 반복\n  // 원래의 의도는 callback이 새로 들어오면 그 callback을 저장해두고 아래의 setInterval을 다시 실행해주려는 의도\n\n  useEffect(() => {\n    setSavedCallback(callback);\n  }, [callback]); // mount가 끝나고 1번 일어남\n  // 맨 처음 mount가 끝나고 savedCallback은 null이기 때문에 setInterval의\u001e executeCallback이 제대로 실행되지 않음 (null이기 때문에)\n\n  useEffect(() => {\n    console.log(savedCallback());\n\n    const executeCallback = () => {\n      savedCallback();\n    };\n\n    const timerId = setInterval(executeCallback, delay);\n    return () => clearInterval(timerId);\n  }, []);\n};\n\n_s(useInterval, \"lESXGhYFAFB7gK4H2JRdf04fUII=\");\n\nexport default useInterval;","map":{"version":3,"sources":["/Users/youlee/Desktop/test222/react/testapp/src/useint.js"],"names":["useEffect","useState","useInterval","callback","delay","savedCallback","setSavedCallback","console","log","executeCallback","timerId","setInterval","clearInterval"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,WAAW,GAAG,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAAA;;AACvC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAC,IAAD,CAAlD,CADuC,CACkB;AAEzD;AACA;AACA;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,gBAAgB,CAACH,QAAD,CAAhB;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT,CANuC,CAUvC;AACA;;AACAH,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,OAAO,CAACC,GAAR,CAAYH,aAAa,EAAzB;;AACA,UAAMI,eAAe,GAAG,MAAM;AAC5BJ,MAAAA,aAAa;AACd,KAFD;;AAIA,UAAMK,OAAO,GAAGC,WAAW,CAACF,eAAD,EAAkBL,KAAlB,CAA3B;AAEA,WAAO,MAAMQ,aAAa,CAACF,OAAD,CAA1B;AACD,GATQ,EASN,EATM,CAAT;AAUD,CAtBD;;GAAMR,W;;AAwBN,eAAeA,WAAf","sourcesContent":["import { useEffect, useState } from 'react';\n\nconst useInterval = (callback, delay) => {\n  const [savedCallback, setSavedCallback] = useState(null) // useState사용\n\n  // callback이 바뀔 때마다 실행\n  // 첫 실행에 callback이 한 번 들어옴 -> 리렌더링 -> 다시 들어옴 -> 리렌더링 -> .. 무한 반복\n  // 원래의 의도는 callback이 새로 들어오면 그 callback을 저장해두고 아래의 setInterval을 다시 실행해주려는 의도\n  useEffect(() => {\n    setSavedCallback(callback);\n  }, [callback]);\n  \n  // mount가 끝나고 1번 일어남\n  // 맨 처음 mount가 끝나고 savedCallback은 null이기 때문에 setInterval의\u001e executeCallback이 제대로 실행되지 않음 (null이기 때문에)\n  useEffect(() => {\n    console.log(savedCallback());\n    const executeCallback = () => {\n      savedCallback();\n    };\n\n    const timerId = setInterval(executeCallback, delay);\n\n    return () => clearInterval(timerId);\n  }, []);\n};\n\nexport default useInterval;"]},"metadata":{},"sourceType":"module"}